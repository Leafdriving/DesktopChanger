# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.5 (standalone edition) on Thu Mar 21 04:32:14 2013

import wx
import Main
import sys , os

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
ID_NP_TIME = wx.NewId()
ID_DEL_DIR = wx.NewId()
ID_ADD_DIR = wx.NewId()

# end wxGlade




class Icon(wx.TaskBarIcon):
    def __init__(self, parent, icon, tooltip, GUI):
        wx.TaskBarIcon.__init__(self)
        self.SetIcon(icon, tooltip)
        self.parent = parent
        self.Bind(wx.EVT_TASKBAR_LEFT_DCLICK, self.OnLeftDClick)
        self.CreateMenu()
        self.GUI = GUI

    def CreateMenu(self):
        self.Bind(wx.EVT_TASKBAR_RIGHT_UP, self.OnPopup)
        self.menu = wx.Menu()
        self.ID_SHOW_OPTION = wx.NewId()
        self.ID_EDIT_OPTION = wx.NewId()        
        self.menu.Append(self.ID_SHOW_OPTION, '&Settings')
        self.menu.Append(self.ID_EDIT_OPTION, '&Next Image')
        self.menu.AppendSeparator()
        self.menu.Append(wx.ID_EXIT, 'E&xit')
        self.Bind(wx.EVT_MENU, self.EH)

    def OnPopup(self, event):
        self.PopupMenu(self.menu)

    def OnLeftDClick(self, event):
        if self.parent.IsIconized():
            self.parent.Iconize(False)
        if not self.parent.IsShown():
            self.parent.Show(True)
        self.parent.Raise()
        
    def EH(self, event):  # wxGlade: MakeGUI.<event_handler>
        print "Event handler `EH' not implemented!"
        temp = event.GetId()
        if temp == self.ID_SHOW_OPTION:
            print "Show Option"
            self.GUI.Show()
        elif temp == self.ID_EDIT_OPTION:
            print "Next Image"
            self.GUI.Screen.update_display(0)
        elif temp == wx.ID_EXIT:
            print "Exit"
            os._exit(1)
        event.Skip()        
    

class MakeGUI(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MakeGUI.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.ListPanel = wx.Panel(self, -1)
        self.ButtonPanel = wx.Panel(self.ListPanel, -1)
        self.ID_NP_TIME = wx.NewId()
        self.ID_DEL_DIR = wx.NewId()
        self.ID_ADD_DIR = wx.NewId()
        self.dirlist = [ ]
        self.buttonAddDir = wx.Button(self.ButtonPanel, self.ID_ADD_DIR, "Add Dir")
        self.buttonDelDir = wx.Button(self.ButtonPanel, self.ID_DEL_DIR, "Del Dir")
        self.button_3 = wx.Button(self.ButtonPanel, -1, "button_3")
        self.NPTime = wx.TextCtrl(self.ButtonPanel, self.ID_NP_TIME, "3.0", style=wx.TE_PROCESS_ENTER)
        self.FList = wx.ListCtrl(self.ListPanel, -1, style=wx.LC_REPORT | wx.SUNKEN_BORDER)
        self.Screen = ""

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.EH)
        self.Bind(wx.EVT_TEXT_ENTER, self.EH)

        # end wxGlade
        self.TrayIcon  = Icon(self, wx.Icon("wall.png", wx.BITMAP_TYPE_PNG), "Leafs Desktop Changer", self)
        self.Bind(wx.EVT_ICONIZE, self.OnIconify)
        self.Bind(wx.EVT_CLOSE, self.OnClose)

    def OnIconify(self, event):
        self.Hide()

    def __set_properties(self):
        # begin wxGlade: MakeGUI.__set_properties
        self.SetTitle("Desktop_Image_Changer")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MakeGUI.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3.Add(self.buttonAddDir, 0, 0, 0)
        sizer_3.Add(self.buttonDelDir, 0, 0, 0)
        sizer_3.Add(self.button_3, 0, 0, 0)
        sizer_3.Add(self.NPTime, 0, 0, 0)
        self.ButtonPanel.SetSizer(sizer_3)
        sizer_2.Add(self.ButtonPanel, 0, wx.EXPAND, 0)
        sizer_2.Add(self.FList, 1, wx.EXPAND, 0)
        self.ListPanel.SetSizer(sizer_2)
        sizer_1.Add(self.ListPanel, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade
    def OnClose(self, event):
        print "OnClose"
        self.Hide()

    def EH(self, event):  # wxGlade: MakeGUI.<event_handler>
#        print "Event handler `EH' not implemented!"
        Main.EH2(self , event.GetId())
        event.Skip()

# end of class MakeGUI
