#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.5 (standalone edition) on Thu Mar 21 04:32:14 2013

import sched, time, os, os.path,wx,random
import PIL
import Image
import MakeGUI
from ctypes import *
from threading import Timer

#myEVT_HAND = wx.NewEventType()
#EVT_HAND = wx.PyEventBinder(myEVT_HAND, 1)

class MakeScreen():
    def __init__(self):
        self.SPI_SETDESKWALLPAPER = 0x14
        self.SPIF_UPDATEINIFILE   = 0x1
        self.SystemParametersInfo = windll.user32.SystemParametersInfoA
#        slef.SystemParametersInfo(SPI_SETDESKWALLPAPER, 0, 'C:\\Users\\Lief-W7\\Desktop\\Desktop Images\\ftop.ru-51919.jpg', SPIF_UPDATEINIFILE)        
        self.x = [ ]
        self.y = [ ]
        self.lx = [ ]
        self.ly = [ ]
        self.PathList = [ ]
        self.FileList = [ ]
        self.num_displays = wx.Display.GetCount()
        for display_num in range(self.num_displays):
            display = wx.Display(display_num)
            geometry = display.GetGeometry()
            (x1,y1) = geometry.GetTopLeft()
            (lx1,ly1) = geometry.GetSize()
            self.x.append( x1 )
            self.y.append( y1 )
            self.lx.append( lx1 )
            self.ly.append( ly1 )
            
    def update_display(self, AT = 1):
        Timer(60, self.update_display, ()).start() 
        if GUI.Screen.FileList:
            x = random.choice(GUI.Screen.FileList)
            out = self.PathList[ x[0] ] + "\\" + x[1]
            print out
            self.SystemParametersInfo(self.SPI_SETDESKWALLPAPER, 0, out, self.SPIF_UPDATEINIFILE)
        else:
            print "no Files Yet"
                     

def EH2(GUI,ID):
    print "ID:",ID    
    if ID == GUI.ID_NP_TIME:
        print "GUI.ID_NP_TIME"
    elif ID == GUI.ID_DEL_DIR :
        print "GID_DEL_DIR "        
    elif ID == GUI.ID_ADD_DIR :
        print "GUI.ID_ADD_DIR "
        Add_Dir(GUI)
    elif ID == wx.ID_EXIT :
        print "close detected"

       
def Refresh_List(GUI):
#    noe = GUI.FList.GetItemCount()
    GUI.FList.DeleteAllItems()
    filelist = [ ]
    pathlist = [ ]    
    for path in GUI.dirlist:
        for dirname, dirnames, filenames in os.walk(path):
            for filename in filenames:
                if filename.endswith("jpg"):
                    if dirname not in pathlist:
                        pathlist.append( dirname )
                    filelist.append( ( pathlist.index( dirname ) , filename ) )
    sc = GUI.Screen
    sc.PathList = pathlist
    sc.FileList = filelist
    x=0
    for each in GUI.dirlist:
        GUI.FList.InsertStringItem(x, "tab1")
        GUI.FList.SetStringItem(x, 1, each)
        x += 1
#    print "pathlist"
#    x = 0
#    for each in sc.PathList:
#        print x,each
#        x += 1
    
#    print "filelist"
#    for each in sc.FileList:
#        print each


def Add_Dir(GUI, lpath=""):
    if lpath == "":
        dd = wx.DirDialog(None, "Select directory to open", "~/", 0, (10, 10), wx.Size(400, 300))
        ret = dd.ShowModal()
        if ret == wx.ID_OK:
            an = dd.GetPath()
            if an not in GUI.dirlist:
                GUI.dirlist.append( an )
                Refresh_List(GUI)
        else:
            print('You clicked cancel')        
        dd.Destroy()
        outfile = open('Settings.txt', 'w')
        outfile.write("\n".join(GUI.dirlist))
        outfile.close()
    else:
        GUI.dirlist.append( lpath )
        Refresh_List(GUI)
        


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    GUI = MakeGUI.MakeGUI(None, -1, "")
    GUI.Screen = MakeScreen()    
   
    if os.path.isfile("Settings.txt"):
        print "settings file exists"
        dirlist = [ ] 
        p = open('Settings.txt')
        for line in p.readlines():
            if line.endswith("\n"):
                line = line[:-1]
            dirlist.append( line )
        GUI.dirlist = dirlist
        Refresh_List(GUI)
    else:
        print "no settings file found"    

    app.SetTopWindow(GUI)
    
    GUI.FList.InsertColumn(0, '#Files', width=50)
    GUI.FList.InsertColumn(1, 'Path')

    GUI.Show()
    #GUI.Hide()
#    GUI.Update()

    GUI.Screen.update_display()


#    while 1:
#        x = random.choice(GUI.Screen.FileList)
#        out = GUI.Screen.PathList[ x[0] ] + "\\" + x[1]
#        print out
#        time.sleep( 5 )
        
    
#    GUI.FList.InsertColumn(0, '#Files', width=50)
#    GUI.FList.InsertColumn(1, 'Path')
#    GUI.FList.InsertStringItem(0, "test")
#    GUI.FList.SetStringItem(0, 1, "01/19/2010")
#    GUI.FList.InsertStringItem(1, "looking good")
#    GUI.FList.SetStringItem(1, 1, "Path Here")    
    app.MainLoop()
